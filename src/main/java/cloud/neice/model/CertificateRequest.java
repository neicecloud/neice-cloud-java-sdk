/*
 * 内测云分发开发者API接口
 * 内测云开发者服务平台应用程序接口文档
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: henryxm@163.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.neice.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CertificateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-30T12:28:02.341031+08:00[Asia/Shanghai]")
public class CertificateRequest {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_FORCE = "force";
  @SerializedName(SERIALIZED_NAME_FORCE)
  private Boolean force;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_UDID = "udid";
  @SerializedName(SERIALIZED_NAME_UDID)
  private String udid;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;


  public CertificateRequest code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * 通过设备证书兑换码可以兑换设备证书
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "通过设备证书兑换码可以兑换设备证书")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public CertificateRequest force(Boolean force) {
    
    this.force = force;
    return this;
  }

   /**
   * 强制触发证书查询刷新:证书模式下，系统如果检查该设备证书不为空，将不会触发渠道证书拉取同步，增加强制后，将强制系统查询各渠道证书
   * @return force
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "强制触发证书查询刷新:证书模式下，系统如果检查该设备证书不为空，将不会触发渠道证书拉取同步，增加强制后，将强制系统查询各渠道证书")

  public Boolean getForce() {
    return force;
  }


  public void setForce(Boolean force) {
    this.force = force;
  }


  public CertificateRequest model(String model) {
    
    this.model = model;
    return this;
  }

   /**
   * 指定设备型号:iPhone,iPad,iPod,如不指定则使用任何设备
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "指定设备型号:iPhone,iPad,iPod,如不指定则使用任何设备")

  public String getModel() {
    return model;
  }


  public void setModel(String model) {
    this.model = model;
  }


  public CertificateRequest phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * 如果你兑换的预定证书，需输入手机号用以接收激活通知
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "如果你兑换的预定证书，需输入手机号用以接收激活通知")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
  }


  public CertificateRequest udid(String udid) {
    
    this.udid = udid;
    return this;
  }

   /**
   * iOS设备的UDID
   * @return udid
  **/
  @ApiModelProperty(required = true, value = "iOS设备的UDID")

  public String getUdid() {
    return udid;
  }


  public void setUdid(String udid) {
    this.udid = udid;
  }


  public CertificateRequest version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * 传递APP客户端的版本号
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "传递APP客户端的版本号")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateRequest certificateRequest = (CertificateRequest) o;
    return Objects.equals(this.code, certificateRequest.code) &&
        Objects.equals(this.force, certificateRequest.force) &&
        Objects.equals(this.model, certificateRequest.model) &&
        Objects.equals(this.phone, certificateRequest.phone) &&
        Objects.equals(this.udid, certificateRequest.udid) &&
        Objects.equals(this.version, certificateRequest.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, force, model, phone, udid, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateRequest {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    force: ").append(toIndentedString(force)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    udid: ").append(toIndentedString(udid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

